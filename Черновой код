import simplegui
import random


WIDTH = 600
HEIGHT = 400       
BALL_RADIUS = 20
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
LEFT = False
RIGHT = True
direction = LEFT


def spawn_ball(direction):
    global ball_pos, ball_vel 
    ball_pos = [WIDTH / 2, HEIGHT / 2]
    ball_vel = [0, 0]
    ball_vel[0], ball_vel[1] = 5, 5 #random.randrange(60, 180) / 10, random.randrange(120, 140) / 10
    if direction == RIGHT:
        ball_vel[0], ball_vel[1] = ball_vel[0], - ball_vel[1] 
    elif direction == LEFT:
        ball_vel[0], ball_vel[1] = - ball_vel[0], - ball_vel[1]
        
    
def new_game():
    global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel  
    global score1, score2  
    spawn_ball(direction)
    score1, score2 = 0, 0
    paddle1_vel = 0
    paddle2_vel = 0
    paddle1_pos = [[2, HEIGHT / 2 - HALF_PAD_HEIGHT  + 3],
                   [PAD_WIDTH - 2, HEIGHT / 2 - HALF_PAD_HEIGHT + 3],
                   [PAD_WIDTH - 2, HEIGHT / 2 + HALF_PAD_HEIGHT  - 3],
                   [2, HEIGHT / 2 + HALF_PAD_HEIGHT - 3]]
    paddle2_pos = [[WIDTH - 2, HEIGHT / 2 - HALF_PAD_HEIGHT + 3],
                   [WIDTH - (PAD_WIDTH - 2), HEIGHT / 2 - HALF_PAD_HEIGHT + 3],
                   [WIDTH - (PAD_WIDTH - 2), HEIGHT / 2 + HALF_PAD_HEIGHT - 3],
                   [WIDTH - 2, HEIGHT / 2 + HALF_PAD_HEIGHT - 3]]

def draw(canvas):
    global score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel
    canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "White")
    canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "White")
    canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "White")  
    if ball_pos[1] <=  BALL_RADIUS or ball_pos[1] >= HEIGHT - BALL_RADIUS:
        ball_vel[1] = - ball_vel[1]
    elif ball_pos[0] - BALL_RADIUS <= PAD_WIDTH and paddle1_pos[1][1] - BALL_RADIUS <= ball_pos[1] <= paddle1_pos[2][1] + BALL_RADIUS:
        ball_vel[0], ball_vel[1] = ball_vel[0] * 1.1, ball_vel[1] * 1.1
        ball_vel[0], ball_vel[1] = - ball_vel[0], - ball_vel[0]
    elif ball_pos[0] + BALL_RADIUS >= WIDTH - PAD_WIDTH and paddle2_pos[1][1] + BALL_RADIUS <= ball_pos[1] <= paddle2_pos[2][1] + ball_pos[1]:
        ball_vel[0], ball_vel[1] = ball_vel[0] * 1.1, ball_vel[1] * 1.1
        ball_vel[0], ball_vel[1] = - ball_vel[0], - ball_vel[0]
    elif ball_pos[0] + BALL_RADIUS >= WIDTH - PAD_WIDTH and not paddle2_pos[1][1] + BALL_RADIUS <= ball_pos[1] <= paddle2_pos[2][1] + ball_pos[1]:
        spawn_ball(LEFT)  
        score1 += 1
    elif ball_pos[0] < PAD_WIDTH + BALL_RADIUS and not paddle1_pos[1][1] - BALL_RADIUS <= ball_pos[1] <= paddle1_pos[2][1] + BALL_RADIUS:
        spawn_ball(RIGHT)
        score2 += 1
    ball_pos[0] += ball_vel[0]
    ball_pos[1] += ball_vel[1]
    if 0 - paddle1_vel <= paddle1_pos[0][1] and paddle1_pos[3][1] <= HEIGHT - paddle1_vel:
        paddle1_pos[0][1] += paddle1_vel
        paddle1_pos[1][1] += paddle1_vel
        paddle1_pos[2][1] += paddle1_vel
        paddle1_pos[3][1] += paddle1_vel
    if 0 - paddle2_vel <= paddle2_pos[0][1] and paddle2_pos[3][1] <= HEIGHT - paddle2_vel:
        paddle2_pos[0][1] += paddle2_vel
        paddle2_pos[1][1] += paddle2_vel
        paddle2_pos[2][1] += paddle2_vel 
        paddle2_pos[3][1] += paddle2_vel
    canvas.draw_circle([ball_pos[0], ball_pos[1]], BALL_RADIUS, 2 * BALL_RADIUS, "White")	
    canvas.draw_polygon([(paddle1_pos[0]),(paddle1_pos[1]),
                         (paddle1_pos[2]), (paddle1_pos[3])], 6, "white")
    canvas.draw_polygon([(paddle2_pos[0]),(paddle2_pos[1]),
                         (paddle2_pos[2]), (paddle2_pos[3])], 6, "white")
    canvas.draw_text("Score 1 is " + str(score1), [100, 60], 24, "red")
    canvas.draw_text("Score 2 is " + str(score2), [400, 60], 24, "red")
    if score1 + score2 == 6:
        ball_vel[0], ball_vel[1] = 0, 0
        ball_pos[0], ball_pos[1] = WIDTH / 2, HEIGHT / 2

        
def keydown(key):
    global paddle1_vel, paddle2_vel
    if key == simplegui.KEY_MAP["w"]:
        paddle1_vel -= 5
    elif key == simplegui.KEY_MAP["s"]:
        paddle1_vel += 5
    elif key == simplegui.KEY_MAP["up"]:
        paddle2_vel -= 5
    elif key == simplegui.KEY_MAP["down"]:
        paddle2_vel += 5
   

def keyup(key):
    global paddle1_vel, paddle2_vel
    if key == simplegui.KEY_MAP["w"]:
        paddle1_vel = 0
    elif key == simplegui.KEY_MAP["s"]:
        paddle1_vel = 0
    elif key == simplegui.KEY_MAP["up"]:
        paddle2_vel = 0
    elif key == simplegui.KEY_MAP["down"]:
        paddle2_vel = 0
        
def reset():
    score1, score2 = 0, 0
    new_game()


frame = simplegui.create_frame("Pong", WIDTH, HEIGHT)
frame.add_button('RESET', reset)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)


new_game()
frame.start()
